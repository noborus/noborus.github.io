<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>csv2ltsv on Noboru Saito&#39;s page</title>
    <link>https://noborus.github.io/tags/csv2ltsv/index.html</link>
    <description>Recent content in csv2ltsv on Noboru Saito&#39;s page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 10 Jun 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://noborus.github.io/tags/csv2ltsv/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>trdsql File format conversion</title>
      <link>https://noborus.github.io/trdsql/02_convert/index.html</link>
      <pubDate>Sat, 10 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://noborus.github.io/trdsql/02_convert/index.html</guid>
      <description>TRDSQL describes files such as CSV as a tool for processing SQL, but can also be used as a tool for simply converting file formats.
In that case, SQL is enough to remember the following fixed phrases. Output all rows and columns in the file.
SELECT * FROM fileNameAfter that, if you specify the input format (-i &amp;hellip;) and the output format (-o &amp;hellip;) as the option, you can convert the file format.</description>
    </item>
    <item>
      <title>trdsql ファイルフォーマット変換</title>
      <link>https://noborus.github.io/blog/02_convert/index.html</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://noborus.github.io/blog/02_convert/index.html</guid>
      <description>trdsqlはCSV等のファイルをSQLで処理するツールとして説明していますが、単純にファイル形式を変換するツールとしても使用できます。
その場合、SQLは以下の定型句さえ覚えておけば、十分です。 ファイル内のすべての行と列を出力します。
SELECT * FROM ファイル名後は、オプションとして入力形式(-i&amp;hellip;)と出力形式(-o&amp;hellip;)を指定してあげればファイル形式の変換が可能です。 CSV、LTSV、JSON等の相互変換ができます。
CSV(-icsv)からLTSV(-oltsv)への変換は以下のようにします。
trdsql -icsv -oltsv &amp;#34;SELECT * FROM ファイル名&amp;#34; CSV header CSVファイルはヘッダーに列名がついている場合 -ih でヘッダーを解釈して列名として使用できます。
header.csv
id,name 1,Orange 2,Melon 3,Appletrdsql -icsv -ih -oltsv &amp;#34;SELECT * FROM header.csv&amp;#34; &amp;gt; test.ltsv test.ltsv
id:1	name:Orange id:2	name:Melon id:3	name:Appleヘッダーが無い場合は、列名はc1,c2,c3&amp;hellip;の連番になります。
LTSV入力 上記で出力されたLTSVを入力に使用すれば、CSVに戻ります。
trdsql -iltsv -ocsv -oh &amp;#34;SELECT * FROM test.ltsv&amp;#34; id,name 1,Orange 2,Melon 3,Apple区切り文字の変更（TSV） また、CSVはComma-Separated Valuesではなく、Character-separated valuesとも呼ばれたりすることがあるように、区切り文字として「,」以外を使用できます。
-id オプションの後に文字を指定することにより変更ができます。 タブ区切りの場合（TSVとも呼ばれます）は、&amp;quot;\t&amp;quot;を使用します。
以下はTSVからCSVの変更になります。
trdsql -icsv -id &amp;#34;\t&amp;#34; -ih &amp;#34;SELECT * FROM test.</description>
    </item>
  </channel>
</rss>