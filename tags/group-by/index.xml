<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>group by on Noboru Saito's page</title><link>https://noborus.github.io/tags/group-by/</link><description>Recent content in group by on Noboru Saito's page</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sat, 07 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://noborus.github.io/tags/group-by/index.xml" rel="self" type="application/rss+xml"/><item><title>trdsql GROUP集計</title><link>https://noborus.github.io/blog/07_group/</link><pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/07_group/</guid><description>GROUP集計 全体の合計を計算することもありますが、グループ毎の合計をまとめて出力したい場合もあります。 そこで使うのがGROUP BYです。
前回の例をもう一度使用します。
name,price apple,100 orange,50 melon,500 apple,90 apple,90 orange,40 orange,40 ここでappleやorange毎の合計を出したい場合は、以下のように検索条件で絞れば計算できますが、nameの種類の数だけ実行するとなると大変な作業になります。
trdsql -ih \ &amp;quot;SELECT name,SUM(CAST(price AS INT)) as sum FROM sample.csv WHERE name='apple'&amp;quot; apple,280 trdsql -ih \ &amp;quot;SELECT name,SUM(CAST(price AS INT)) as sum FROM sample.csv WHERE name='orange'&amp;quot; orange,130 そこでGROUP BYを使ってnameをグループとして扱うことで、それぞれの集計結果を求めることができます。
trdsql -ih \ &amp;quot;SELECT name,SUM(CAST(price AS INT)) as sum FROM sample.csv GROUP BY name&amp;quot; apple,280 melon,500 orange,130 前回の集計を少し変えてname毎に出すように出力してみます。 出力は-oat(Ascii Table)を使うと見やすく表示できます。
trdsql -ih -oat \ &amp;quot;SELECT name, COUNT(name) as count, MIN(CAST(price AS INT)) AS min, &amp;quot; \ &amp;quot; MAX(CAST(price AS INT)) as max, SUM(CAST(price AS INT)) as sum, &amp;quot; \ &amp;quot; AVG(CAST(price AS INT)) as avg &amp;quot; \ &amp;quot; FROM sample.</description></item></channel></rss>