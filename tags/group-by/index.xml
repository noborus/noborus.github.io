<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>group by on Noboru Saito&#39;s page</title>
    <link>https://noborus.github.io/tags/group-by/index.html</link>
    <description>Recent content in group by on Noboru Saito&#39;s page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 07 Dec 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://noborus.github.io/tags/group-by/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>trdsql GROUP集計</title>
      <link>https://noborus.github.io/trdsql/07_group/index.html</link>
      <pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://noborus.github.io/trdsql/07_group/index.html</guid>
      <description>GROUP集計 全体の合計を計算することもありますが、グループ毎の合計をまとめて出力したい場合もあります。 そこで使うのがGROUP BYです。
前回の例をもう一度使用します。
name,price apple,100 orange,50 melon,500 apple,90 apple,90 orange,40 orange,40ここでappleやorange毎の合計を出したい場合は、以下のように検索条件で絞れば計算できますが、nameの種類の数だけ実行するとなると大変な作業になります。
trdsql -ih &amp;#34;SELECT name,SUM(CAST(price AS INT)) as sum FROM sample.csv WHERE name=&amp;#39;apple&amp;#39;&amp;#34; apple,280trdsql -ih &amp;#34;SELECT name,SUM(CAST(price AS INT)) as sum FROM sample.csv WHERE name=&amp;#39;orange&amp;#39;&amp;#34; orange,130そこでGROUP BYを使ってnameをグループとして扱うことで、それぞれの集計結果を求めることができます。
trdsql -ih &amp;#34;SELECT name,SUM(CAST(price AS INT)) as sum FROM sample.csv GROUP BY name&amp;#34; apple,280 melon,500 orange,130前回の集計を少し変えてname毎に出すように出力してみます。 出力は-oat(Ascii Table)を使うと見やすく表示できます。
trdsql -ih -oat \ &amp;#34;SELECT name, COUNT(name) as count, MIN(CAST(price AS INT)) AS min, MAX(CAST(price AS INT)) as max, SUM(CAST(price AS INT)) as sum, AVG(CAST(price AS INT)) as avg FROM sample.</description>
    </item>
    <item>
      <title>trdsql GROUP集計</title>
      <link>https://noborus.github.io/blog/07_group/index.html</link>
      <pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://noborus.github.io/blog/07_group/index.html</guid>
      <description>GROUP集計 全体の合計を計算することもありますが、グループ毎の合計をまとめて出力したい場合もあります。 そこで使うのがGROUP BYです。
前回の例をもう一度使用します。
name,price apple,100 orange,50 melon,500 apple,90 apple,90 orange,40 orange,40ここでappleやorange毎の合計を出したい場合は、以下のように検索条件で絞れば計算できますが、nameの種類の数だけ実行するとなると大変な作業になります。
trdsql -ih &amp;#34;SELECT name,SUM(CAST(price AS INT)) as sum FROM sample.csv WHERE name=&amp;#39;apple&amp;#39;&amp;#34; apple,280trdsql -ih &amp;#34;SELECT name,SUM(CAST(price AS INT)) as sum FROM sample.csv WHERE name=&amp;#39;orange&amp;#39;&amp;#34; orange,130そこでGROUP BYを使ってnameをグループとして扱うことで、それぞれの集計結果を求めることができます。
trdsql -ih &amp;#34;SELECT name,SUM(CAST(price AS INT)) as sum FROM sample.csv GROUP BY name&amp;#34; apple,280 melon,500 orange,130前回の集計を少し変えてname毎に出すように出力してみます。 出力は-oat(Ascii Table)を使うと見やすく表示できます。
trdsql -ih -oat \ &amp;#34;SELECT name, COUNT(name) as count, MIN(CAST(price AS INT)) AS min, MAX(CAST(price AS INT)) as max, SUM(CAST(price AS INT)) as sum, AVG(CAST(price AS INT)) as avg FROM sample.</description>
    </item>
  </channel>
</rss>