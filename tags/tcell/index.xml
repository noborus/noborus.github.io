<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tcell on Noboru Saito's page</title><link>https://noborus.github.io/tags/tcell/</link><description>Recent content in tcell on Noboru Saito's page</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy;Noboru Saito 2019-2020</copyright><lastBuildDate>Sun, 17 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://noborus.github.io/tags/tcell/index.xml" rel="self" type="application/rss+xml"/><item><title>tcellについて2</title><link>https://noborus.github.io/blog/tcell_02/</link><pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/tcell_02/</guid><description>これまで goのTUIについて tcellについて イベント tcellのイベントは、NewScreen()で作成したスクリーンのPollEvent()で取得できます。 その名の通り、イベントが起こるまでポーリング（polling）して待つので、起こらない限り止まったままになります。 Pol</description></item><item><title>tcellについて</title><link>https://noborus.github.io/blog/tcell_01/</link><pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/tcell_01/</guid><description>SetContent() goのTUIについてで書いたようにtcellのSetContent()は1文字設置していくのでASCIIの範囲内だと簡単ですが、Unicodeの世界では注意すべき点があります。 まず日本語などの全角幅の文字と半角幅の文字が混在すると全角幅のときには、次の文字は1つとばして設置する</description></item><item><title>goのTUIについて</title><link>https://noborus.github.io/blog/go_tui/</link><pubDate>Tue, 12 May 2020 23:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/go_tui/</guid><description>概要 goでTUI(text user interface)を作成する場合にライブラリを使用するのが一般的です。 goのTUIライブラリはだいたい以下に分類されます。 termbox-go系 tcell系 その他 TUIライブラリを謳っている場合は、だいたい上記2つを元に実装されている場合が多いです。</description></item></channel></rss>