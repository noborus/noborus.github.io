<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ov on Noboru Saito's page</title><link>https://noborus.github.io/tags/ov/</link><description>Recent content in ov on Noboru Saito's page</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 24 May 2022 09:00:00 +0900</lastBuildDate><atom:link href="https://noborus.github.io/tags/ov/index.xml" rel="self" type="application/rss+xml"/><item><title>Use ov with psql</title><link>https://noborus.github.io/ov/psql/</link><pubDate>Thu, 19 May 2022 10:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/psql/</guid><description>psql This is the recommended setting for PSQL_PAGER. Header 1 is specified(-H1),&amp;quot;|&amp;quot; is used to separate columns(-d &amp;ldquo;|&amp;rdquo;), and column mode(-C) is set. If it fits on the screen, exit the pager(-F).
PSQL_PAGER 'ov -F -C -d &amp;quot;|&amp;quot; -H1' The following sets the header style of ov.yaml.
StyleHeader: Background: &amp;quot;#23274f&amp;quot; Bold: true StyleColumnHighlight: Foreground: &amp;quot;lightcyan&amp;quot; Reverse: true StyleAlternate: Background: &amp;quot;#2a2a2a&amp;quot; watch(PostgreSQL 15) A pager is available for WATCH from PostgreSQL version 15.</description></item><item><title>Use ov with git</title><link>https://noborus.github.io/ov/git/</link><pubDate>Thu, 19 May 2022 10:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/git/</guid><description>Git calls pager when needed. Git output will be easier to use if each is separated by section-delimiter
It is recommended to set the following in gitconfig.
[pager] diff = ov -F --section-delimiter &amp;quot;^diff&amp;quot; log = ov -F --section-delimiter &amp;quot;^commit&amp;quot; git log The git log is separated by commit. You will be able to move by commit as shown below.
[pager] diff = ov -F --section-delimiter &amp;quot;^diff&amp;quot; git diff git diff is separated by diff or file.</description></item><item><title>Watch files with ov</title><link>https://noborus.github.io/ov/watch/</link><pubDate>Sun, 22 May 2022 18:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/watch/</guid><description>ov supports watch mode, which reads files at regular intervals. The file is added every specified time.
ov --watch 1 /proc/meminfo At that time, add formfeed (\f) instead of EOF. watch mode automatically sets follow-section &amp;ldquo;\f&amp;rdquo;.</description></item><item><title>Use ov with mysql</title><link>https://noborus.github.io/ov/mysql/</link><pubDate>Tue, 24 May 2022 09:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/mysql/</guid><description>ov can be used as a pager for mysql or MySQL Shell.
Use the &amp;ndash;pager option with the mysql client.
mysql --pager='ov -w=f -H3 -F -C -d &amp;quot;|&amp;quot;' You can also write in ~/.my.cnf.
[client] pager=ov -w=f -H3 -F -C -d &amp;quot;|&amp;quot; The header line for mysql is 3, but it&amp;rsquo;s surrounded by a separator line. You can increase the display area by setting the skip line to 1 and the header to 1.</description></item><item><title>Use ov with pgcli</title><link>https://noborus.github.io/ov/pgcli/</link><pubDate>Tue, 24 May 2022 09:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/pgcli/</guid><description>ov can be set as a pager for pgcli.
~/.config/pgcli/config
pager = 'ov -C -d &amp;quot;|&amp;quot; --skip-lines 1 -H1'</description></item><item><title>Use ov with mycli</title><link>https://noborus.github.io/ov/mycli/</link><pubDate>Tue, 24 May 2022 09:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/mycli/</guid><description>ov can be set as a pager for mycli.
mycli reads the client section of ~/.my.cnf in mysql. Please refer to https://www.mycli.net/config.
[client] pager=&amp;quot;ov -C --skip-lines 1 --header 1 -d'|'&amp;quot;</description></item><item><title>Use ov with man</title><link>https://noborus.github.io/ov/man/</link><pubDate>Tue, 24 May 2022 09:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/man/</guid><description>ov can also be used as a man pager.
MANPAGER=ov In the man page, you can set the color by the StyleOverStrike and StyleOverLine styles.
StyleOverStrike: Foreground: &amp;quot;aqua&amp;quot; Bold: true StyleOverLine: Foreground: &amp;quot;red&amp;quot; Underline: true</description></item><item><title>Use ov with procs</title><link>https://noborus.github.io/ov/procs/</link><pubDate>Tue, 24 May 2022 09:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/procs/</guid><description>procs supports pager.
You can specify the pager in the configuration file.
It is convenient to set header(-H) to 1 or 2.
[pager] command = &amp;quot;ov -H=1 -w=false -d=│&amp;quot;</description></item><item><title>Use ov with bat</title><link>https://noborus.github.io/ov/bat/</link><pubDate>Tue, 24 May 2022 09:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/bat/</guid><description>bat supports pager.
You can use it by setting the environment variable PAGER or BAT_PAGER.
export BAT_PAGER=&amp;quot;ov -F&amp;quot;</description></item><item><title>View csv file with ov</title><link>https://noborus.github.io/ov/csv/</link><pubDate>Tue, 24 May 2022 09:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/csv/</guid><description>ov can also be used as a csv viewer.
ov -H1 -C -d',' -c MOCK_DATA.csv</description></item><item><title>ov v0.11.0</title><link>https://noborus.github.io/blog/ov_011_0/</link><pubDate>Sat, 21 May 2022 08:39:02 +0900</pubDate><guid>https://noborus.github.io/blog/ov_011_0/</guid><description>ov v0.11.0をリリースしました Terminal PAGER releases ov v0.11.0
セクションの概念を追加 対象の文書を--section-delimiterで区切り文字を指定することにより、セクションとして扱えるようになりました。
--section-delimiterの区切り文字は正規表現で指定できます。改行は含まれませんので、^$は空行を指定したことになります。 その場合空行毎に違うセクションになります。
ページャーは通常、内容に関係なく画面サイズにより次のページの表示を決めていますが、セクションを利用することにより意味のある単位で移動できます。
デフォルトでは、次のセクションに移動するのは[スペース]キー、前のセクションに移動するのは[^]キーです。最後のセクションに移動は[9]キーです。
空行を指定した場合は、セクション移動時に最初の行が空行になってしまいます。これを調整するために--section-startも追加しました。--section-start 1を指定することにより、--section-delimiterの次の行から表示できます。
起動オプションだけでなく、起動後も--section-delimiterは[alt+d]、--section-startは[alt+s]で指定できます。
follow-sectionを追加 --follow-sectionオプションを追加しました。section-delimiterで指定した区切り文字単位で、内容が更新されたときに最後のセクションを表示します。 follow-sectionを利用することにより、PostgreSQL version 15で追加される psqlのwatchのページャー（PSQL_WATCH_PAGER）として使用できるようになります。
PSQL_WATCH_PAGER 'ov --follow-section --section-delimiter &amp;quot;^$&amp;quot;' Watchは追記するように変更 --watchは指定した時間毎にファイルを再読込していましたが、前の内容を消さずに再読込をした内容を追記するように変更しました。 このときEOFに到達するとEOFを&amp;rsquo;\f&amp;rsquo;に置き換えて追記します。
さらにWatchモードは自動で&amp;rsquo;\f&amp;rsquo;をsection-delimiterとして、最終セクションを表示するようになりました。
つまり、--watchで最後に実行された内容が表示され続けるのは変わりませんが、Watchモードを止めて上にスクロールすると履歴が見られます。
Watchモードはファイルの定期再読込に加えてsection-delimiterとfollow-sectionを自動で設定したモードです。
過去のバージョン v0.11.0 sectionの概念を追加 v0.10.0 reload,watchを追加 v0.9.6 リダイレクト出力、列モードの修正 v0.9.5 サスペンド／レジュームのサポート v0.9.4 マーク機能の強化、インクリメンタルサーチを追加して検索強化。 v0.9.3 スキップ行オプションの追加 v0.9.2 主要モジュール更新版 v0.9.1 半画面下移動のバグ修正。goのバージョンを1.16以降へ変更。 v0.9.0 follow,follow-all,execの各モードを追加、改善。検索とカラム選択のスタイルカスタマイズを可能にしました。 v0.8.9 (pre)follow-mode,follow-all-modeの追加 v0.8.1 文字の単位をCode point から Grapheme clusterに変更しました。 v0.8.0 tcell v2にアップグレードしました。 v0.7.1 交互に行スタイル効果適用の行がズレていたので修正 v0.7.0 スタイルカスタマイズの改善 v0.6.2 検索の高速化とキャンセル処理の追加 v0.</description></item><item><title>How to use section</title><link>https://noborus.github.io/ov/section/</link><pubDate>Wed, 18 May 2022 10:00:00 +0900</pubDate><guid>https://noborus.github.io/ov/section/</guid><description>ov can use a unit called section.</description></item><item><title>ov v0.10.0</title><link>https://noborus.github.io/blog/ov_010_0/</link><pubDate>Thu, 17 Feb 2022 10:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_010_0/</guid><description>ov v0.10.0をリリースしました Terminal PAGER releases ov v0.10.0
reload/watchの追加 ファイルを再読込みするreloadを追加しました。ファイルを再オープンして読み込み直します。(起動後のF5 or ctrl+alt+l)
標準入力等のパイプ経由の場合は、それまで読み込んだ入力をリセットして、そこから読み込みを開始します。
watchは指定したｎ秒毎にreloadを繰り返します。watchの指定はオプション--watch nまたは起動後のF4 or ctrl+alt+wで指定して開始します。
例えば/proc/meminfo等の特殊ファイルに対しても使用できます。
終了時の出力を改善 ov終了時に表示している画面を再現するように出力できます（画面をクリアせずに終了の要望がきますが、その代替としての機能です）が、lessの場合はその時点の画面ではなく、それまで表示した画面を残して終了できます。
lessとまったく同じ機能はできませんが、さかのぼって出力させておきたい場合があるときのために出力範囲をできるようにしました。
オプションの--exit-write-beforeと--exit-write-afterで指定できます。--exit-write-beforeを多めに指定しておけば、画面をスクロールした後そこまでの行まで先頭から出力できるようになります。
また逆に--exit-write-afterを3行等少なく指定すれば、現在表示している画面の上から3行目までのように少なく出力できます。
これは起動した後終了するときにctrl+qで終了しようとするとその前に範囲指定できます。
WriteAndQuit Before:After: 1000:0 のようにすると1000行遡って（1000行に満たなければ先頭）出力します(Afterの0は画面下限を意味します)。
WriteAndQuit Before:After: :3 とした場合は、現在の画面を3行のみ出力します。
描画速度の改善 環境によって表示が遅い場合があるようなので、描画速度を改善しました。
ovはunisegを使用して1文字を判定しているので、Unicodeの結合文字に対応していない他のソフトに比べて遅い場合があります。それでも大抵の環境では気づくことはない速度で描画できていると思います。
過去のバージョン v0.10.0 reload,watchを追加 v0.9.6 リダイレクト出力、列モードの修正 v0.9.5 サスペンド／レジュームのサポート v0.9.4 マーク機能の強化、インクリメンタルサーチを追加して検索強化。 v0.9.3 スキップ行オプションの追加 v0.9.2 主要モジュール更新版 v0.9.1 半画面下移動のバグ修正。goのバージョンを1.16以降へ変更。 v0.9.0 follow,follow-all,execの各モードを追加、改善。検索とカラム選択のスタイルカスタマイズを可能にしました。 v0.8.9 (pre)follow-mode,follow-all-modeの追加 v0.8.1 文字の単位をCode point から Grapheme clusterに変更しました。 v0.8.0 tcell v2にアップグレードしました。 v0.7.1 交互に行スタイル効果適用の行がズレていたので修正 v0.7.0 スタイルカスタマイズの改善 v0.6.2 検索の高速化とキャンセル処理の追加 v0.6.1 細かな修正バージョン v0.</description></item><item><title>ov v0.9.6</title><link>https://noborus.github.io/blog/ov_096/</link><pubDate>Thu, 06 Jan 2022 10:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_096/</guid><description>ov v0.9.6をリリースしました リダイレクト出力がうまくいかない場合があったので修正しました。
値がない列があると列モードのハイライト選択がそれ以降選択できない問題があったので修正しました。
過去のバージョン v0.9.6 リダイレクト出力、列モードの修正 v0.9.5 サスペンド／レジュームのサポート v0.9.4 マーク機能の強化、インクリメンタルサーチを追加して検索強化。 v0.9.3 スキップ行オプションの追加 v0.9.2 主要モジュール更新版 v0.9.1 半画面下移動のバグ修正。goのバージョンを1.16以降へ変更。 v0.9.0 follow,follow-all,execの各モードを追加、改善。検索とカラム選択のスタイルカスタマイズを可能にしました。 v0.8.9 (pre)follow-mode,follow-all-modeの追加 v0.8.1 文字の単位をCode point から Grapheme clusterに変更しました。 v0.8.0 tcell v2にアップグレードしました。 v0.7.1 交互に行スタイル効果適用の行がズレていたので修正 v0.7.0 スタイルカスタマイズの改善 v0.6.2 検索の高速化とキャンセル処理の追加 v0.6.1 細かな修正バージョン v0.6.0 マウスサポート v0.5.0 複数のドキュメントを開く方法を変更 v0.4.0 ヘルプ画面を追加 v0.3.1 位置をマークする機能を追加 v0.3.0 入力の改善 v0.2.1 色をカスタマイズ可能にする v0.2.0 検索の改善 v0.1.3 行番号モードを追加 v0.1.2 Homebrewパッケージの追加 v0.1.1 パッケージ自動更新の調整 v0.1.0 ovにレポジトリ名と構成を変更。deb/rpmパッケージの追加 v0.0.5 現在の基本機能を備えた最初のバージョン 参考 ovの紹介</description></item><item><title>ov v0.9.5</title><link>https://noborus.github.io/blog/ov_095/</link><pubDate>Tue, 28 Dec 2021 10:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_095/</guid><description>ov v0.9.5をリリースしました Terminal PAGER releases ov v0.9.5
サスペンド／レジュームのサポートを追加 そのままでは、あまり使わなくなってきたと思っていますが、サスペンド／レジュームを出来るようにしました。 ov表示中に一旦Shellを起動してコマンドが実行できます。Shellを終了するとovに戻ります。シグナルのサスペンドも（サポートしている環境では）サスペンドします。
リダイレクト出力をサポート これまで echo &amp;quot;hoge&amp;quot; | ov &amp;gt; out.txt としてもovの表示はしても出力はしませんでしたが、リダイレクトするようにしました。 また、標準出力をパイプで受け取った場合に、標準エラー出力によって画面が崩れることがあったのをなるべく抑止するように改善しました。
その他内部的にリファクタリングにより多くの修正をしています。
過去のバージョン v0.9.5 サスペンド／レジュームのサポート v0.9.4 マーク機能の強化、インクリメンタルサーチを追加して検索強化。 v0.9.3 スキップ行オプションの追加 v0.9.2 主要モジュール更新版 v0.9.1 半画面下移動のバグ修正。goのバージョンを1.16以降へ変更。 v0.9.0 follow,follow-all,execの各モードを追加、改善。検索とカラム選択のスタイルカスタマイズを可能にしました。 v0.8.9 (pre)follow-mode,follow-all-modeの追加 v0.8.1 文字の単位をCode point から Grapheme clusterに変更しました。 v0.8.0 tcell v2にアップグレードしました。 v0.7.1 交互に行スタイル効果適用の行がズレていたので修正 v0.7.0 スタイルカスタマイズの改善 v0.6.2 検索の高速化とキャンセル処理の追加 v0.6.1 細かな修正バージョン v0.6.0 マウスサポート v0.5.0 複数のドキュメントを開く方法を変更 v0.4.0 ヘルプ画面を追加 v0.3.1 位置をマークする機能を追加 v0.3.0 入力の改善 v0.2.1 色をカスタマイズ可能にする v0.2.0 検索の改善 v0.1.3 行番号モードを追加 v0.</description></item><item><title>ov v0.9.4</title><link>https://noborus.github.io/blog/ov_094/</link><pubDate>Tue, 02 Nov 2021 12:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_094/</guid><description>ov v0.9.4をリリースしました Terminal PAGER releases ov v0.9.4
検索の改善 検索にインクリメンタルサーチを追加しました。issue#83に上がっていたインクリメンタルサーチを実装しました。 一文字入力するごとに検索をして最短でみつかった語の位置に移動します。 検索は毎回goroutineを使用しているため、入力を妨げないようになっています（小さなファイルだと気がつかないですが、大きなファイルで固まる実装が多いので、その差を実感していただけると思います）。
検索は元々、正規表現の入力も可能だったのですが、入力時に特殊文字を\でエスケープする等のわかりづらさがあったので、今回正規表現検索を使用するかを分けました。 インクリメンタルサーチでも正規表現は使用できます。
元々、大文字、小文字を区別するスイッチはあったので、検索時は、これらの組み合わせによって動作が変わるため複雑になっています。
機能 表示 (Default)切り替えキー コマンドオプション インクリメンタルサーチ (I) alt+i &amp;ndash;incremental 正規表現 (R) alt+r &amp;ndash;regexp-search 大文字小文字の区別 (Aa) alt+c -i, &amp;ndash;case-sensitive オプションの他、設定によってデフォルトを変更できます。ov.yamlのコメントを外して設定してください。
マークの改善 こちらもissue#86に上がっていたマークの削除とマークの可視化を実装しました。
これまで、現在の見ている行にマークを付けて移動して戻れるようにしていたのですが、削除機能は付けていませんでした。個別削除と全削除をできるようにしています。
マークすると先頭の背景色を変更して可視化しています。この部分はスタイルカスタマイズでStyleMarkLineにより、背景色、前景色、太字、アンダーライン等カスタマイズ可能です。また、MarkStyleWidthにより先頭から何文字スタイルを適用するか設定可能です。一行全部を変更したい場合は -1を指定してください。
スキップ行の指定 v0.9.3のオプションとして、先頭から指定した行を不可視にするオプションを追加しました。これは--headerと組み合わせて使用することを想定しています。 --headerを指定すると先頭から指定した行を固定表示できますが、余分な行があると表示領域が狭くなります。
例えばASCIIのボックス表示では、最上位行が区切り線の行になります。1行だけならまだ良いですが、横に長いデータの場合、折返し表示モードでは区切り線が何行にも渡って表示される場合があります。
1 +----+--------+ 2 | id | name | 3 +----+--------+ 4 | 1 | Orange | 5 | 2 | Melon | 6 | 3 | Apple | 7 +----+--------+ この場合 1行スキップして、ヘッダーを1行に指定すると2行目のみヘッダーとして扱われ、4行目以降がボディとしてスクロール対象になります。 おまけ インクリメンタルサーチと正規表現の組み合わせで以下のようなことができるようになりました:-) 過去のバージョン v0.</description></item><item><title>ov v0.9.0</title><link>https://noborus.github.io/blog/ov_090/</link><pubDate>Fri, 09 Apr 2021 16:14:51 +0900</pubDate><guid>https://noborus.github.io/blog/ov_090/</guid><description>ov v0.9.0をリリースしました。 Terminal PAGER releases ov v0.9.0
v0.8.9をプレリリースバージョンとしてリリースしていましたが、正式にfollowモードを追加したバージョンとして v0.9.0をリリースしました。
followモード、follow-allモード followモードはtail -fのようにファイルが追記されたら自動で読み取って表示します。lessではless +Fで実現されています。 ログの監視に使われることが多いです。
ov --follow-mode /var/log/syslog followモードで複数のファイルを指定することも出来ますが、ovでは複数のファイルを別々のドキュメントとして管理して、 &amp;lsquo;]&amp;lsquo;と&amp;rsquo;[&amp;lsquo;で切り替えるようになっています。表示しているファイル以外が更新されていても裏側で読み取られているので気づくことが出来ません。
そこで、動作はfollowモードに似ていますが、最後に更新があったファイルに切り替えるfollow-allモードも追加しました。
ov --follow-all /var/log/syslog /var/log/auth.log のようにすると最後に更新されたファイルに自動で切り替わります。
followモードとfollow-allモードは起動後でもctrl+fやctrl+aによりモード切り替えが可能です。
execモード execモードはovの--exec に渡されたコマンドを実行して、stdout/stderrを表示します。 コマンドを実行した結果をパイプによりページャーで表示させるのが一般的ですが、stdin(標準入力)は一つしか無いので、stdout/stderrどちらかを表示か両方を一つにリダイレクトして（混ぜて）表示する必要があります。
例えばmakeコマンドでは、そこから更に複数のコマンドが呼ばれるためstdoutとstderr両方に多く出力されるため見づらい場合があります。
そのような場合にexecモードで実行すると簡単にエラーと通常出力を分けて見ることができます。その際にfollow-allモードも一緒に指定するとエラー時に気づきやすくなります。
ov --follow-all --exec -- make -j2 execオプションの後に(--)を付けるとそれ以降はovのオプションとは解釈されません（この例ではmakeのオプションと解釈されます）。
スタイルカスタマイズの追加 検索のハイライトとカラムモードのハイライトをカスタマイズ出来るようにしました。 ~/.ov.yamlに以下のように指定できます。
StyleSearchHighlight: Foreground: &amp;quot;gold&amp;quot; Reverse: true いくつかのモードを束ねて切り替えるview-modeの選択の追加 ページャーとして汎用的に使えるようになってきたのでファイル形式によっていくつものモードを変更したい場合が出てきます。あらかじめ ~/.ov.yamlに以下のようなModeを登録しておくと起動後にpを押してpsqlやMySQLと打つことでこれらのモードを束ねて切り替えることを出来るようにしました。
Mode: psql: Header: 2 AlternateRows: true ColumnMode: true LineNumMode: false WrapMode: true ColumnDelimiter: &amp;quot;|&amp;quot; MySQL: Header: 3 AlternateRows: true ColumnMode: true LineNumMode: false WrapMode: true ColumnDelimiter: &amp;quot;|&amp;quot; 過去のバージョン v0.</description></item><item><title>ov v0.8.1</title><link>https://noborus.github.io/blog/ov_081/</link><pubDate>Fri, 12 Feb 2021 18:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_081/</guid><description>ov v0.8.1をリリースしました。 Terminal PAGER releases ov v0.8.1
文字の単位をCode point から Grapheme clusterに変更しました。
GoではruneがCode point単位で文字として数えます。Unicodeでは結合文字等があり、1Code pointが１文字ではない場合があります。1文字ではなくても元の文字の後に置けば良いので、文字数が変わる以外は通常それほど意識しなくても良い場合がほとんどです。
ただし端末に表示する場合のような文字幅が固定長の世界では、次の文字が0,1,2幅先なのかを決める必要があります。これまでCode pointに合わせて表示していたため🇯🇵のような文字は、端末では「JP」（フォントによりますが点線でそれぞれ囲まれた文字）のように表示されていました。そのため２文字で表示されることがありましたが、これからは1文字幅として扱うようにしました。
現在だとechoのように端末に任せて表示すると２文字幅で、ovで表示すると「J」のように表示され、文字が欠けてしまっているように見えます。これは端末側が対応して🇯🇵が表示出来るようになっても文字幅がズレずにそのまま表示されるようになるための対応です。端末側が対応するまではechoとの結果がズレてしまいますが、どちらが正しい仕様かを考えた結果先行して実装することにしてしまいました。 ただ、いまだに絵文字の結合に対応して表示できる端末が見つからないのが問題点です&amp;hellip;
過去のバージョン v0.8.1 文字の単位をCode point から Grapheme clusterに変更しました。 v0.8.0 tcell v2にアップグレードしました。 v0.7.1 交互に行スタイル効果適用の行がズレていたので修正 v0.7.0 スタイルカスタマイズの改善 v0.6.2 検索の高速化とキャンセル処理の追加 v0.6.1 細かな修正バージョン v0.6.0 マウスサポート v0.5.0 複数のドキュメントを開く方法を変更 v0.4.0 ヘルプ画面を追加 v0.3.1 位置をマークする機能を追加 v0.3.0 入力の改善 v0.2.1 色をカスタマイズ可能にする v0.2.0 検索の改善 v0.1.3 行番号モードを追加 v0.1.2 Homebrewパッケージの追加 v0.1.1 パッケージ自動更新の調整 v0.1.0 ovにレポジトリ名と構成を変更。deb/rpmパッケージの追加 v0.0.5 現在の基本機能を備えた最初のバージョン 参考 ovの紹介</description></item><item><title>ov v0.8.0</title><link>https://noborus.github.io/blog/ov_080/</link><pubDate>Thu, 07 Jan 2021 14:57:42 +0900</pubDate><guid>https://noborus.github.io/blog/ov_080/</guid><description>ov v0.8.0をリリースしました。 Terminal PAGER releases ov v0.8.0
このバージョンからtcellをv2にアップグレードしました。 スタイルらへんの非互換があるためv2になっていますが、そこまで大きくは変わっていません。
Windowsターミナルでキーバインドに大文字を指定しているキーが効かない問題を修正しました。 他の端末では「Shift+a」は「A」になるのですが、Windowsターミナルでは「Shift+A」でイベントが発生するので、大文字のときには「Shift」が押されていてもイベントを取得するようにしました。
ドキュメントを追加・閉じるイベントを追加しました。追加は通常使用できませんが、閉じるは「Ctrl+k」で閉じるようになりました。
configとオプションを指定していた場合にオプションが優先されない問題があったのを修正しました。
oviewer パッケージ を使用できるように内部的にも修正をしています。
過去のバージョン v0.8.0 tcell v2にアップグレードしました。 v0.7.1 交互に行スタイル効果適用の行がズレていたので修正 v0.7.0 スタイルカスタマイズの改善 v0.6.2 検索の高速化とキャンセル処理の追加 v0.6.1 細かな修正バージョン v0.6.0 マウスサポート v0.5.0 複数のドキュメントを開く方法を変更 v0.4.0 ヘルプ画面を追加 v0.3.1 位置をマークする機能を追加 v0.3.0 入力の改善 v0.2.1 色をカスタマイズ可能にする v0.2.0 検索の改善 v0.1.3 行番号モードを追加 v0.1.2 Homebrewパッケージの追加 v0.1.1 パッケージ自動更新の調整 v0.1.0 ovにレポジトリ名と構成を変更。deb/rpmパッケージの追加 v0.0.5 現在の基本機能を備えた最初のバージョン 参考 ovの紹介</description></item><item><title>ov v0.7.0</title><link>https://noborus.github.io/blog/ov_070/</link><pubDate>Wed, 09 Dec 2020 10:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_070/</guid><description>ov v0.7.0をリリースしました。 Terminal PAGER releases ov v0.7.0
PAGER=ov としても問題なく使えるバージョンになっていると思います。
スタイルカスタマイズを変更しました。 元々は、ヘッダーの色、行の交互表示の背景色、重ね打ちの色、重ね内下線の色を設定ファイルにより指定出来るようにしていましたが、これらの項目全体のスタイルを指定できるようにしました。
それぞれ、StyleHeader、StyleAlternate、StyleOverStrike、 StyleOverLineという項目名について、以下のスタイルを指定できます。
Foreground、Background には色名。 Bold, Blink, Dim, Italic, Underline には true / false(Boolean)。 以下のように指定できます。
StyleHeader: Background: &amp;quot;gray&amp;quot; Foreground: &amp;quot;red&amp;quot; Bold: true Italic: true Underline: true ov.yaml をコピーして変更していくと良いと思います。
また、lessのキーバインドに近づけた ov-less.yaml をアップしておきました。 lessに慣れている方はこちらを使用すると移行がしやすいと思います。
ページアップ、ページダウンの移動改善 1行を折り返さない表示の場合は、表示領域の高さ＝行数なので、+-するだけで問題なかったですが、 折り返す場合は、表示領域の幅により表示できる行数が変わり、スクロール時にはさらに行の途中から表示する必要があったりするので、 これまでページアップ、ページダウンは正確に1ページではありませんでした。
今回はその計算の実装をやり直しました。そのため、1行が非常に長く画面いっぱいになる場合でも、ページ単位の移動で、その途中の表示からちゃんと表示されるようになりました。 また1行が非常に長い場合にパフォーマンスが落ちるのを少し改善しました。元々の実装の仕方により、1行が長すぎる行の効率はあまり良くありません。
過去のバージョン v0.7.0 スタイルカスタマイズの改善 v0.6.2 検索の高速化とキャンセル処理の追加 v0.6.1 細かな修正バージョン v0.6.0 マウスサポート v0.5.0 複数のドキュメントを開く方法を変更 v0.4.0 ヘルプ画面を追加 v0.3.1 位置をマークする機能を追加 v0.3.0 入力の改善 v0.2.1 色をカスタマイズ可能にする v0.</description></item><item><title>ov v0.6.2</title><link>https://noborus.github.io/blog/ov_062/</link><pubDate>Mon, 19 Oct 2020 21:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_062/</guid><description>ov v0.6.2をリリースしました。 releases ov v0.6.2
v0.6.0でマウスサポートを追加しました。 元のマウスの動きは、ov側では制御せずにターミナル側のマウス処理にまかせていました。しかしそれでは、選択してコピーする時に改行コードが含まれないでコピーされるため、複数行のコピーに問題がありました。
マウス制御を実装することで、複数行のコピーがちゃんと複数行としてコピーされるようになります。ただ、goでクリップボードを制御するのは、難しくLinuxでは外部コマンドを使用するライブラリを使用しています。
v0.6.1はv0.6.0の細かなバグの修正バージョンです。 v0.6.2で検索のキャンセルができるようになりました。 大きなファイルで検索をかけると時間がかかる場合があります。そのときにキャンセル（デフォルトでCtrl+c)を押すと、検索がキャンセルされすぐに制御が戻ります。
また、検索速度自体を速くしました。検索文字列が正規表現のメタ文字を使用していない場合は、正規表現検索ではない検索をします。正規表現よりも高速に検索できるため、通常の文字列を入れて検索するときは、かなり高速になっています。
過去のバージョン v0.6.2 検索の高速化とキャンセル処理の追加 v0.6.1 細かな修正バージョン v0.6.0 マウスサポート v0.5.0 複数のドキュメントを開く方法を変更 v0.4.0 ヘルプ画面を追加 v0.3.1 位置をマークする機能を追加 v0.3.0 入力の改善 v0.2.1 色をカスタマイズ可能にする v0.2.0 検索の改善 v0.1.3 行番号モードを追加 v0.1.2 Homebrewパッケージの追加 v0.1.1 パッケージ自動更新の調整 v0.1.0 ovにレポジトリ名と構成を変更。deb/rpmパッケージの追加 v0.0.5 現在の基本機能を備えた最初のバージョン 参考 ovの紹介</description></item><item><title>ov v0.5.0</title><link>https://noborus.github.io/blog/ov_050/</link><pubDate>Mon, 31 Aug 2020 15:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_050/</guid><description>ov v0.5.0をリリースしました。 releases ov v0.5.0
こちらには書いていませんでしたが、0.2.0リリース以降に以下のリリースをしていました。
v0.3.0 v0.3.1 v0.4.0 v0.5.0 これまでの変更で内部的な修正を多くおこない v0.5.0では複数のファイルを別々のドキュメントとして開くように変更しました。
これまで ov *.txt は cat *.txtと同じようにファイルを繋げて表示していましたが、それぞれ独立して開いてドキュメントの切り替えで移動するようになっています。
1つのviewに対して複数のドキュメントを切り替えて使えるように内部的な修正をしたため、helpの表示、debug logの表示が可能になり、v0.5.0では、複数ファイルの開き方を変更するまでになりました。
また、安定バージョンとは言えませんが、ライブラリとしても使用可能になっています。
ライブラリの使用の仕方としては、サンプル がありますが、以下のようにOpenしてRun()で使用します。ページャーのライブラリなので、Run()の後は終了キーを押すまで返ってきません。goroutineで動かして、動いているページャーに対して動作を変更することが可能ですが、まだ仕様が落ち着いてないので、無茶をすると動かなくなる場合があります。
package main import ( &amp;quot;github.com/noborus/ov/oviewer&amp;quot; ) func main() { ov, err := oviewer.Open(&amp;quot;main.go&amp;quot;) if err != nil { panic(err) } if err := ov.Run(); err != nil { panic(err) } } 過去のバージョン v0.5.0 複数のドキュメントを開く方法を変更 v0.4.0 ヘルプ画面を追加 v0.3.1 位置をマークする機能を追加 v0.3.0 入力の改善 v0.2.1 色をカスタマイズ可能にする v0.2.0 検索の改善 v0.</description></item><item><title>ov v0.2.0</title><link>https://noborus.github.io/blog/ov_020/</link><pubDate>Mon, 25 May 2020 10:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_020/</guid><description>ov v0.2.0をリリースしました。 releases ov v0.2.0
検索を正規表現対応にしました 検索を正規表現対応にしました。
検索入力を改善しました。カーソルを移動でき、削除、挿入できるようにしました。
バックスペースと重ね打ちに対応しました ^Hによるバックスペースに対応しました。
a^Ha のように文字にバックスペースしてからもう一度同じ文字を打つ重ね打ち、とアンダーラインにバックスペースしてから文字を打つ重ね打ちに対応しました。
これによりMANPAGERとして使用できるようになりました。
まとめ これまでpsqlやmysqlで使用される機能を多く追加してきましたが、 通常のPAGERとして使用される必要な機能を実装しました。
自分で使用する分にはlessの代わりにovを使用しても問題なく使用できています。 ただlessは高機能でオプションが多くあるので、人によっては全然足りないと感じることでしょう。
過去のバージョン v0.2.0　検索の改善 v0.1.3　行番号モードを追加 v0.1.2　Homebrewパッケージの追加 v0.1.1　パッケージ自動更新の調整 v0.1.0　ovにレポジトリ名と構成を変更。deb/rpmパッケージの追加 v0.0.5　現在の基本機能を備えた最初のバージョン 参考 ovの紹介</description></item><item><title>ov v0.1.3</title><link>https://noborus.github.io/blog/ov_013/</link><pubDate>Mon, 11 May 2020 10:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/ov_013/</guid><description>ov v0.1.3をリリースしました。 releases ov v0.1.3
行番号モードを追加しました -nオプションをつけての起動又はGキー（トグル）により行番号モードになります。
交互の背景色の仕様を少し変更しました 交互の背景色を付けるモードでは、画面の端から端まで色を付けるように変更しました。 これにより空行でも背景色が表示されます。
ステータスの行数を自動更新するようにしました ステータス右側の (0/177) の（177）が行数ですが、行数が多いと起動時に全行を読み取れていないので、「&amp;hellip;」と読み取り中の表示がついていました。何らかの操作をした時に、その時点の読み取られた行数を更新していましたが、タイマーでも更新するように変更しました。
過去のバージョン v0.1.2　Homebrewパッケージの追加 v0.1.1　パッケージ自動更新の調整 v0.1.0　ovにレポジトリ名と構成を変更。deb/rpmパッケージの追加 v0.0.5　現在の基本機能を備えた最初のバージョン 参考 ov - Oviewerの紹介</description></item><item><title>ov</title><link>https://noborus.github.io/blog/oviewer/</link><pubDate>Tue, 21 Apr 2020 14:50:00 +0900</pubDate><guid>https://noborus.github.io/blog/oviewer/</guid><description>私が作成中のovの紹介です。
最初Oviewerというレポジトリ名でしたが、コマンド名に合わせるようにovに変更しました。
インストール ov のリリースからバイナリもダウンロードできますが、今はまだgo getで最新をダウンロードして使うことをオススメします。
※ 2020/5/11追記。現在は各種パッケージも用意していますので、インストールしやすい方法利用してください。
go get -u github.com/noborus/ov cd ov make install 特徴 lessやmoreのようなTerminal pagerです。
圧縮（gzip, bzip2, zstd, lz4, xz）されているファイルをそのまま表示可能 より良いUnicodeのサポート。ターミナルで表示できる（フォントがあれば）結合文字も表示可能 より良いワイド幅（全角文字）の対応 ヘッダーの行数を指定して固定可能 行の折り返し／折り返さないを表示後に切替可能 1行毎に背景色を付けることが可能 psqlやmysqlからの表示を考慮 終了時に現在の画面の内容を書き出すことが可能 環境変数PAGERに設定して使用しても問題なく使えることを目指しています。
現在はUTF-8のテキストを対象にしています。
また、manのpagerとしては、問題があるので、MANPAGERは別途指定する必要があります。
※ 2020/5/25 追記 v0.2.0からMANPAGERとしても使用できるようになりました。
実装の特徴 tcellを使用していて、比較的多くの端末に対応しています。 メモリに溜め込む実装なので、メモリは多く使用します。更新されるログファイルの監視的な用途には向きません。
使用方法 コマンド名は ov です。
基本的にはファイル名を指定して起動します。
ov filename 又はパイプを使用して標準入力からの入力を受け付けます。
cat filename|ov オプションは以下です。オプションの多くは、起動後にキーより切り替え可能です。
$ ov --help ov is a feature rich pager(such as more/less). It supports various compressed files(gzip, bzip2, zstd, lz4, and xz).</description></item></channel></rss>