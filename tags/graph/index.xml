<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graph on Noboru Saito&#39;s page</title>
    <link>https://noborus.github.io/tags/graph/index.html</link>
    <description>Recent content in Graph on Noboru Saito&#39;s page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 24 Dec 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://noborus.github.io/tags/graph/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>trdsql グラフ</title>
      <link>https://noborus.github.io/trdsql/24_graph/index.html</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://noborus.github.io/trdsql/24_graph/index.html</guid>
      <description>trdsqlは、グラフ作成機能は持っていないためグラフを作成したいときには別のツールを使用して作成することになります。
ExcelやLibreOfficeで描画するのが定番でしょうが、ここではmarianogappa/chartでグラフを描画する方法を紹介します。
marianogappa/chartは、Goで作られていて、や多くのプラットフォームで動作して、標準入力から受け取ったデータをブラウザに描画します。
複雑なグラフには向いていませんが、簡単なグラフを少ないオプションを指定するだけで描画できます。
chartに与えるデータは表示したいグラフによりますが、1列又は2列のデータです。
例えばchartのデフォルトのpieでは、以下のような文字列が並んでいるようなデータを集計して円グラフにしてくれます。
aaa bbb ccc aaa aaa aaacat aaa.csv|chart（ブラウザが開いて表示されます）
これを使用して例えば、ログ集計で使用したログのリクエストをグラフにすると以下のようになります。
trdsql &amp;#34;SELECT req FROM log.ltsv&amp;#34;|chart また、他のグラフでは、1列目がx項目名で、2列目が値として与えます。デフォルトはタブ区切りのデータを受け取るので、タブ区切りで出力します。
ログ集計のリクエストが多い順をTOP 20に変えて出力すると以下のようになります。
trdsql -od &amp;#34;\t&amp;#34; \ &amp;#34;SELECT req, count(req) as count &amp;#34; \ &amp;#34;FROM log.ltsv &amp;#34; \ &amp;#34;GROUP BY req &amp;#34; \ &amp;#34;ORDER BY count DESC LIMIT 20&amp;#34; |chart bar marianogappa/chartは、Chart.jsを使用してグラフを描画しています。Chart.js自体が簡単なJavaScriptを用意すれば描画してくれるので、もう少し複雑なグラフを描きたい場合は直接利用するのが良いでしょう。</description>
    </item>
    <item>
      <title>trdsql グラフ</title>
      <link>https://noborus.github.io/blog/24_graph/index.html</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://noborus.github.io/blog/24_graph/index.html</guid>
      <description>trdsqlは、グラフ作成機能は持っていないためグラフを作成したいときには別のツールを使用して作成することになります。
ExcelやLibreOfficeで描画するのが定番でしょうが、ここではmarianogappa/chartでグラフを描画する方法を紹介します。
marianogappa/chartは、Goで作られていて、や多くのプラットフォームで動作して、標準入力から受け取ったデータをブラウザに描画します。
複雑なグラフには向いていませんが、簡単なグラフを少ないオプションを指定するだけで描画できます。
chartに与えるデータは表示したいグラフによりますが、1列又は2列のデータです。
例えばchartのデフォルトのpieでは、以下のような文字列が並んでいるようなデータを集計して円グラフにしてくれます。
aaa bbb ccc aaa aaa aaacat aaa.csv|chart（ブラウザが開いて表示されます）
これを使用して例えば、ログ集計で使用したログのリクエストをグラフにすると以下のようになります。
trdsql &amp;#34;SELECT req FROM log.ltsv&amp;#34;|chart また、他のグラフでは、1列目がx項目名で、2列目が値として与えます。デフォルトはタブ区切りのデータを受け取るので、タブ区切りで出力します。
ログ集計のリクエストが多い順をTOP 20に変えて出力すると以下のようになります。
trdsql -od &amp;#34;\t&amp;#34; \ &amp;#34;SELECT req, count(req) as count &amp;#34; \ &amp;#34;FROM log.ltsv &amp;#34; \ &amp;#34;GROUP BY req &amp;#34; \ &amp;#34;ORDER BY count DESC LIMIT 20&amp;#34; |chart bar marianogappa/chartは、Chart.jsを使用してグラフを描画しています。Chart.js自体が簡単なJavaScriptを用意すれば描画してくれるので、もう少し複雑なグラフを描きたい場合は直接利用するのが良いでしょう。</description>
    </item>
  </channel>
</rss>