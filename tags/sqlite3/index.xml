<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sqlite3 on Noboru Saito's page</title><link>https://noborus.github.io/tags/sqlite3/</link><description>Recent content in sqlite3 on Noboru Saito's page</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 15 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://noborus.github.io/tags/sqlite3/index.xml" rel="self" type="application/rss+xml"/><item><title>trdsql DBインポート</title><link>https://noborus.github.io/blog/15_import/</link><pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/15_import/</guid><description>trdsqlにはデータベースにインポートするオプションはありません。 しかしながら、SELECT以外のSQLの実行も可能なので、SQLによるインポートが可能です。
以下は、メモリデータベースにインポートしても終了すると消えてしまうので、メモリデータベース以外のデータベースに接続して実行します。
CREATE TABLE AS テーブルを作成してインポートするには CREATE TABLE ASを使用します。
PostgreSQL で CREATE TABLE AS まず、PostgreSQLへデータをインポートしてみます。 これまで、SELECTで実行してきた内容に CREATE TABLE テーブル名 AS を前につければ、テーブルが作成されデータがインポートされます。
trdsql -driver postgres -dsn &amp;quot;dbname=trdsql_test&amp;quot; -ih \ &amp;quot;CREATE TABLE test AS SELECT * FROM header.csv&amp;quot; 成功した場合、何も表示されずに終了します。失敗した場合、エラーが表示されます。
SELECTの結果がインポートされるため、SELECT側で列名の変更、列の型指定、インポートするデータの条件指定をすれば良いことになります。
trdsql -driver postgres -dsn &amp;quot;dbname=trdsql_test&amp;quot; -ih \ &amp;quot;CREATE TABLE fruits AS SELECT id::int AS num, name::VARCHAR(20) FROM header.csv&amp;quot; trdsql -driver postgres -dsn &amp;quot;dbname=trdsql_test&amp;quot; -ih -oh\ &amp;quot;SELECT * FROM fruits&amp;quot; num,name 1,Orange 2,Melon 3,Apple もし、テーブルの作成のみを先にして、INSERTを後でおこないたい場合はWITH NO DATAを付けます。</description></item><item><title>trdsql SQLite3エンジンの使用</title><link>https://noborus.github.io/blog/14_sqlite3/</link><pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/14_sqlite3/</guid><description>SQLite3への接続方法を説明します。
SQLite3に接続 そもそもtrdsqlのデフォルトはSQLite3のメモリデータベースに接続していますが、メモリデータベース以外にも接続できます。
オプションの -driver に sqlite3 を指定し、-dsn にサーバーへの接続情報を指定します。
dsnはsqlite3のデータファイル名を指定すれば、そのファイルをデータベースとして使用します。 （ファイル名の指定の仕方はfile: や file:// 等も可能です）。
あらかじめファイルが無い場合もエラーにはなりません。
trdsql -driver sqlite3 -dsn &amp;quot;test.sqlite&amp;quot; -oat &amp;quot;SELECT * FROM test&amp;quot; +----+--------+-------+ | id | name | price | +----+--------+-------+ | 1 | Orange | 50 | | 2 | Melon | 500 | | 3 | Apple | 100 | +----+--------+-------+ さらに「?」で続けて、オプションを渡すこともできます。 メモリデータベースでオプションを渡すときには 「:memory:?」の後にオプションを続けて下さい。
例えば、LIKEで大文字小文字を区別するように変更するには以下のようにします。
デフォルトではLIKEは大文字小文字が区別されない。
trdsql -driver sqlite3 -dsn &amp;quot;:memory:&amp;quot; -ih \ &amp;quot;SELECT * FROM header.</description></item></channel></rss>