<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sql on Noboru Saito&#39;s page</title><link>https://noborus.github.io/tags/sql/</link><description>Recent content in sql on Noboru Saito&#39;s page</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy;Noboru Saito 2019</copyright><lastBuildDate>Sun, 15 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://noborus.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>trdsql DBインポート</title><link>https://noborus.github.io/blog/15_import/</link><pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/15_import/</guid><description>trdsqlにはデータベースにインポートするオプションはありません。 しかしながら、SELECT以外のSQLの実行も可能なので、SQLによるインポートが可能です。 以下は、メモリデータベースにインポートしても終了すると消えてしまうので、メモリデータベース以外のデータベースに接続して実</description></item><item><title>trdsql 集計</title><link>https://noborus.github.io/blog/05_aggregate/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/05_aggregate/</guid><description>集計 COUNT 最初はCOUNT(*)です。全体の件数を数えることが出来ます。 集計関数を使用すると元の行と列のデータは出力されず、そこから集計された結果が出力されます。 以下の例は結果が１行なので、CSVの様に見えませんが、1行1列(ヘッダー付き)のCSVとして出力されています。 単純に件数を</description></item><item><title>trdsql 簡単なSQL その２</title><link>https://noborus.github.io/blog/04_sql2/</link><pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/04_sql2/</guid><description>検索条件 前回、列の並べ替え、抽出、行の並べ替えをしたので、今回は行の抽出です。 行を抽出するには、WHEREを付けて、検索条件を書きます。 前回と同じ例のファイルを使います。 trdsql -ih &amp;#34;SELECT id, \`name\` FROM header.csv WHERE id=1&amp;#34; 1,Orange SQLのメインな機能ですね。検索条件を書くだけで、該当する行を出力できます。 AND, OR AND や OR や (</description></item><item><title>trdsql 簡単なSQL</title><link>https://noborus.github.io/blog/03_sql/</link><pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/03_sql/</guid><description>trdsqlと簡単なSQLを使用することで、他のUNIXツールを組み合わせて出来るようなことが一発で出来るようになります。 ファイル解析 SELECT * FROMから進んで簡単なSQLを実行する場合、あらかじめ列名を調べておく必要があります。trdsql に -aとファイル名を付けて実行するとファイ</description></item><item><title>trdsql 目次</title><link>https://noborus.github.io/blog/00_index/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/00_index/</guid><description>インストール 変換 簡単なSQL 簡単なSQLその2 集計 集計計算 グループ集計 ログ集計 ワイルドカード、圧縮ファイル 標準入力 処理の概要 PostgreSQLエンジンの使用 MySQLエンジンの使用 SQLite3エンジンの使用 DBインポート JOIN</description></item></channel></rss>