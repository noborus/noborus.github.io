<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>except on Noboru Saito&#39;s page</title>
    <link>https://noborus.github.io/tags/except/index.html</link>
    <description>Recent content in except on Noboru Saito&#39;s page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 23 Dec 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://noborus.github.io/tags/except/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>trdsql 差分、比較</title>
      <link>https://noborus.github.io/trdsql/23_except/index.html</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://noborus.github.io/trdsql/23_except/index.html</guid>
      <description>CSV同士やCSVとテーブルなどで、値の比較をしたい場合があります。
同じ形式で一部が違うCSVファイルであれば、diffを取る方法もありますが、trdsqlのSQLを使用して比較すると形式が違う場合の比較にも使用できます。
差分の出力 SQLで比較して、差分を出すには、EXCEPTを使用します。EXCEPTは Aのテーブルから Bのテーブルを引いた残りのAの内容を出力します。
Bの方に多くの行があっても関係なく、AにあってBにない行を出力します。
以下のCSVファイルで比較してみます。new.csvで、3の更新と4の追加があるCSVファイルです。
old.csv
1,AAA 2,BBB 3,CCCnew.csv
1,AAA 2,BBB 3,CCB 4,DDD単純に全列を比較すると1と2の行が同じであるため、消されて残った3と4が出力されます。 この場合old.csv側にnew.csvにない行があっても出力されません。diffの比較とは違いますね。
trdsql &amp;#34;SELECT * FROM new.csv EXCEPT SELECT * FROM old.csv &amp;#34; 3,CCB 4,DDDテーブルとファイルの差分出力 既存のデータベースに接続すれば、テーブルとの比較もできます。
例えば、trdsql DBインポートでインポートしたテーブルと更新されたCSVとの比較をしたいときには、以下のようにすると良いでしょう。
CSVファイル側をキャストして型を合わせています。
trdsql -driver postgres -dsn &amp;#34;dbname=trdsql_test&amp;#34; -ih -oh \ &amp;#34;SELECT id::int,name FROM fruits.csv &amp;#34; \ &amp;#34;EXCEPT &amp;#34; \ &amp;#34;SELECT id,name FROM fruits &amp;#34; id,name 4,Grapeデータベース側のテーブルが更新されて新しい場合は、逆にテーブル EXCEPT CSVファイルとすれば、良いでしょう。
共通の行の出力 また、EXCEPTとは逆に共通の行を出力させたいときには、INTERSECT を使用します。
&amp;#34;SELECT id::int,name FROM fruits.csv &amp;#34; \ &amp;#34;INTERSECT &amp;#34; \ &amp;#34;SELECT id,name FROM fruits&amp;#34; id,name 1,Orange 2,Melon 3,Apple</description>
    </item>
    <item>
      <title>trdsql 差分、比較</title>
      <link>https://noborus.github.io/blog/23_except/index.html</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://noborus.github.io/blog/23_except/index.html</guid>
      <description>CSV同士やCSVとテーブルなどで、値の比較をしたい場合があります。
同じ形式で一部が違うCSVファイルであれば、diffを取る方法もありますが、trdsqlのSQLを使用して比較すると形式が違う場合の比較にも使用できます。
差分の出力 SQLで比較して、差分を出すには、EXCEPTを使用します。EXCEPTは Aのテーブルから Bのテーブルを引いた残りのAの内容を出力します。
Bの方に多くの行があっても関係なく、AにあってBにない行を出力します。
以下のCSVファイルで比較してみます。new.csvで、3の更新と4の追加があるCSVファイルです。
old.csv
1,AAA 2,BBB 3,CCCnew.csv
1,AAA 2,BBB 3,CCB 4,DDD単純に全列を比較すると1と2の行が同じであるため、消されて残った3と4が出力されます。 この場合old.csv側にnew.csvにない行があっても出力されません。diffの比較とは違いますね。
trdsql &amp;#34;SELECT * FROM new.csv EXCEPT SELECT * FROM old.csv &amp;#34; 3,CCB 4,DDDテーブルとファイルの差分出力 既存のデータベースに接続すれば、テーブルとの比較もできます。
例えば、trdsql DBインポートでインポートしたテーブルと更新されたCSVとの比較をしたいときには、以下のようにすると良いでしょう。
CSVファイル側をキャストして型を合わせています。
trdsql -driver postgres -dsn &amp;#34;dbname=trdsql_test&amp;#34; -ih -oh \ &amp;#34;SELECT id::int,name FROM fruits.csv &amp;#34; \ &amp;#34;EXCEPT &amp;#34; \ &amp;#34;SELECT id,name FROM fruits &amp;#34; id,name 4,Grapeデータベース側のテーブルが更新されて新しい場合は、逆にテーブル EXCEPT CSVファイルとすれば、良いでしょう。
共通の行の出力 また、EXCEPTとは逆に共通の行を出力させたいときには、INTERSECT を使用します。
&amp;#34;SELECT id::int,name FROM fruits.csv &amp;#34; \ &amp;#34;INTERSECT &amp;#34; \ &amp;#34;SELECT id,name FROM fruits&amp;#34; id,name 1,Orange 2,Melon 3,Apple</description>
    </item>
  </channel>
</rss>