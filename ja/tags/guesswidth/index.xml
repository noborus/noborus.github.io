<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>guesswidth on 斉藤登のページ</title><link>https://noborus.github.io/ja/tags/guesswidth/index.html</link><description>Recent content in guesswidth on 斉藤登のページ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 13 Jun 2023 07:00:00 +0900</lastBuildDate><atom:link href="https://noborus.github.io/ja/tags/guesswidth/index.xml" rel="self" type="application/rss+xml"/><item><title>trdsql 固定幅を対象</title><link>https://noborus.github.io/ja/trdsql/36_guesswidth/index.html</link><pubDate>Tue, 13 Jun 2023 07:00:00 +0900</pubDate><guid>https://noborus.github.io/ja/trdsql/36_guesswidth/index.html</guid><description>trdsqlは標準入力からデータを受け取ることができますが、ps等の出力は本来スペース区切りとは言えないフォーマットを解釈していたので、列の解釈は正確ではありませんでした。
trdsql 0.11.1からは-iwidthオプションを使用して、幅が固定長の列をテーブルとして扱えるようになりました。 このオプションを使用するとpsのような出力をより正確に解釈できます。
ps | trdsql -omd -iwidth &amp;#34;SELECT * FROM - &amp;#34; | PID | TTY | TIME | CMD | |--------|-------|----------|--------| | 237958 | pts/2 | 00:00:02 | zsh | | 369132 | pts/2 | 00:00:00 | ps | | 369133 | pts/2 | 00:00:00 | trdsql |解釈できるのは、列名のヘッダーががあり、そのヘッダーが下の値の幅に合わせて出力している場合です。
psやdocker ps、docker images、df、dpkg -l等の出力を確認しています。
docker ps -a|trdsql -ojson -iwidth &amp;#34;SELECT * FROM -&amp;#34; [ { &amp;#34;CONTAINER ID&amp;#34;: &amp;#34;52b096a5473b&amp;#34;, &amp;#34;IMAGE&amp;#34;: &amp;#34;69b11229fb45&amp;#34;, &amp;#34;COMMAND&amp;#34;: &amp;#34;\&amp;#34;/bin/sh -c &amp;#39;set -ex…\&amp;#34;&amp;#34;, &amp;#34;CREATED&amp;#34;: &amp;#34;17 months ago&amp;#34;, &amp;#34;STATUS&amp;#34;: &amp;#34;Exited (2) 17 months ago&amp;#34;, &amp;#34;PORTS&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;NAMES&amp;#34;: &amp;#34;admiring_mahavira&amp;#34; }, { &amp;#34;CONTAINER ID&amp;#34;: &amp;#34;5aa93ac03306&amp;#34;, &amp;#34;IMAGE&amp;#34;: &amp;#34;chentex/random-logger:latest&amp;#34;, &amp;#34;COMMAND&amp;#34;: &amp;#34;\&amp;#34;/entrypoint.</description></item><item><title>幅指定フォーマットの幅を推測する</title><link>https://noborus.github.io/ja/blog/guesswidth/index.html</link><pubDate>Sun, 09 Apr 2023 07:00:00 +0900</pubDate><guid>https://noborus.github.io/ja/blog/guesswidth/index.html</guid><description>昔からUnix系のコマンドやCLIでは幅を揃えて出力することがあります。 ls, ps, df, 等々&amp;hellip;
このような出力はprintfのフォーマット指定により出力できます。 このフォーマット指定がわかれば、scanfにより読み取りが可能ですが、「出力内容だけ」から列を認識して読み取ることは簡単ではありません。
複数のスペースを区切り文字と見なす場合、出力を列に分割することは可能ですが、ヘッダーや値により不要に分割されてしまうことがあります。これを人間が読み取るのと同じように列の幅を推測するライブラリ／ツールを作りました。
guesswidth Goで作ってます。
完璧に読み取るのは難しいですが、スペース区切りの正規表現よりは、より良い結果が得られると思います。 ​ 読み取れるのは、主にヘッダー行があり、ヘッダーの列の幅が、その後に続く行の値の幅を表している場合です。
psやdfが当てはまります。lsはヘッダー行がないため、列の区切りは曖昧です。
psでは&amp;quot;PID&amp;quot;、&amp;ldquo;TTY&amp;rdquo;、&amp;ldquo;TIME&amp;rdquo;、&amp;ldquo;CMD&amp;quot;が下の値を表しているため、4つに分けることができます。
この例では複数スペースでも分割できますが、ヘッダーや値にスペースが含まれると正しく分けることができません。guesswidthではそのような形式にも対応します。
guesswidthの使い方はパイプ|で渡すだけです。デフォルトでは|を区切り文字として挿入します。
ps PID TTY TIME CMD 1145448 pts/2 00:00:00 zsh 1158532 pts/2 00:00:00 ps ↓
ps |guesswidth PID| TTY | TIME|CMD 1145448| pts/2 | 00:00:00|zsh 1158532| pts/2 | 00:00:00|ps 「,」を区切り文字を使用して CSV として区切ることもできます。CSVでは余分なスペースを取り除きます。
ps |guesswidth csv PID,TTY,TIME,CMD 1145448,pts/2,00:00:00,zsh 1158532,pts/2,00:00:00,ps ps、df、docker psやその他多くの出力に対応しています。lsはヘッダーがないため1行目の内容を基準に分割されます。(最初の行は合計表示なので基準から外す必要があります。)
ls -l|guesswidth --header 2 合計 7900|||||||| -rw-r--r--| 1| noborus| noborus| 1078| Mar| 14| 05:48|LICENSE -rw-r--r--| 1| noborus| noborus| 526| Mar| 16| 05:23|Makefile -rw-r--r--| 1| noborus| noborus| 1751| Mar| 21| 16:49|README.</description></item></channel></rss>