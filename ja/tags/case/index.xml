<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CASE on 斉藤登のページ</title><link>https://noborus.github.io/ja/tags/case/index.html</link><description>Recent content in CASE on 斉藤登のページ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 07 Jan 2020 10:18:00 +0900</lastBuildDate><atom:link href="https://noborus.github.io/ja/tags/case/index.xml" rel="self" type="application/rss+xml"/><item><title>trdsql CASE式</title><link>https://noborus.github.io/ja/trdsql/32_case/index.html</link><pubDate>Tue, 07 Jan 2020 10:18:00 +0900</pubDate><guid>https://noborus.github.io/ja/trdsql/32_case/index.html</guid><description>CASE式は、プログラム言語のif文やswitch文のような条件に分岐した処理をおこないます。単純な1を&amp;rsquo;A&amp;rsquo;に変換するような場合は、一時的なテーブルとJOINさせたり文字列の書き換えで可能ですが、 範囲を指定してグループ化したい場合はCASE式を使うと便利です。
CASE式には以下の2つのパターンどちらも使用できます。
CASEは CASE 式（列) WHEN 値 THEN 結果とCASEの後に式を書いて、WHENが値だけのパターンと CASE WHEN 式 THEN 結果 とCASEの式を省略してWHENに式を書くパターン 必要であれば、ELSE 結果で当てはまらない場合を書き、ENDで式の終わりを示します。
case.csv のようなCSVを使用して、scoreが80以上の場合は&amp;rsquo;A&amp;rsquo;、30以上の場合は、&amp;lsquo;B&amp;rsquo;、30より下の場合は、&amp;lsquo;F&amp;rsquo;と表示させてみます。
id,name,score 1,bob,89 2,alice,75 3,dave,23trdsql -ih -oat \ &amp;#34;SELECT id,name,score, &amp;#34; \ &amp;#34; CASE WHEN CAST(score AS int) &amp;gt;= 80 THEN &amp;#39;A&amp;#39; &amp;#34; \ &amp;#34; WHEN CAST(score AS int) &amp;gt;= 30 THEN &amp;#39;B&amp;#39; &amp;#34; \ &amp;#34; ELSE &amp;#39;F&amp;#39; &amp;#34; \ &amp;#34; END AS evaluation &amp;#34; \ &amp;#34; FROM case.csv&amp;#34; +----+-------+-------+------------+ | id | name | score | evaluation | +----+-------+-------+------------+ | 1 | bob | 89 | A | | 2 | alice | 75 | B | | 3 | dave | 23 | F | +----+-------+-------+------------+CASE式は書いた先から評価されます。</description></item><item><title>trdsql CASE式</title><link>https://noborus.github.io/ja/blog/32_case/index.html</link><pubDate>Tue, 07 Jan 2020 10:18:00 +0900</pubDate><guid>https://noborus.github.io/ja/blog/32_case/index.html</guid><description>CASE式は、プログラム言語のif文やswitch文のような条件に分岐した処理をおこないます。単純な1を&amp;rsquo;A&amp;rsquo;に変換するような場合は、一時的なテーブルとJOINさせたり文字列の書き換えで可能ですが、 範囲を指定してグループ化したい場合はCASE式を使うと便利です。
CASE式には以下の2つのパターンどちらも使用できます。
CASEは CASE 式（列) WHEN 値 THEN 結果とCASEの後に式を書いて、WHENが値だけのパターンと CASE WHEN 式 THEN 結果 とCASEの式を省略してWHENに式を書くパターン 必要であれば、ELSE 結果で当てはまらない場合を書き、ENDで式の終わりを示します。
case.csv のようなCSVを使用して、scoreが80以上の場合は&amp;rsquo;A&amp;rsquo;、30以上の場合は、&amp;lsquo;B&amp;rsquo;、30より下の場合は、&amp;lsquo;F&amp;rsquo;と表示させてみます。
id,name,score 1,bob,89 2,alice,75 3,dave,23trdsql -ih -oat \ &amp;#34;SELECT id,name,score, &amp;#34; \ &amp;#34; CASE WHEN CAST(score AS int) &amp;gt;= 80 THEN &amp;#39;A&amp;#39; &amp;#34; \ &amp;#34; WHEN CAST(score AS int) &amp;gt;= 30 THEN &amp;#39;B&amp;#39; &amp;#34; \ &amp;#34; ELSE &amp;#39;F&amp;#39; &amp;#34; \ &amp;#34; END AS evaluation &amp;#34; \ &amp;#34; FROM case.csv&amp;#34; +----+-------+-------+------------+ | id | name | score | evaluation | +----+-------+-------+------------+ | 1 | bob | 89 | A | | 2 | alice | 75 | B | | 3 | dave | 23 | F | +----+-------+-------+------------+CASE式は書いた先から評価されます。</description></item></channel></rss>