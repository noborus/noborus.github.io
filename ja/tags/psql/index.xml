<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>psql on 斉藤登のページ</title><link>https://noborus.github.io/ja/tags/psql/index.html</link><description>Recent content in psql on 斉藤登のページ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Fri, 21 Jul 2023 09:00:00 +0900</lastBuildDate><atom:link href="https://noborus.github.io/ja/tags/psql/index.xml" rel="self" type="application/rss+xml"/><item><title>psql</title><link>https://noborus.github.io/ja/ov/psql/index.html</link><pubDate>Fri, 21 Jul 2023 09:00:00 +0900</pubDate><guid>https://noborus.github.io/ja/ov/psql/index.html</guid><description>PostgreSQLのクライアントツールであるpsqlは結果を表示するときにPAGERを利用できます。 PSQLのPAGERを設定するも参照してください。
psql psqlは、結果を表示するときに最初の行にヘッダーとして列名が表示され、その下に列が|で区切られて表示されます。 ovを利用すると、ヘッダーと列を指定することで、より見やすく表示できます。
以下はPSQL_PAGER の推奨設定例です。 ヘッダー1を指定(-H1)、列の区切りに&amp;quot;|&amp;ldquo;を指定(-d &amp;quot;|&amp;quot;)、カラムモード(-C)を設定します。 画面に収まる場合は、ページャーを終了します(-F)。 列の色を変える(--column-rainbow)のもおすすめです。
PSQL_PAGER &amp;#39;ov -F -C -d &amp;#34;|&amp;#34; -H1 --column-rainbow&amp;#39;画面ではデフォルトから色を変えてconfig.yamlで以下の設定をしています。
StyleHeader: Background: &amp;#34;#23274f&amp;#34; Bold: true StyleColumnHighlight: Foreground: &amp;#34;lightcyan&amp;#34; Reverse: true StyleAlternate: Background: &amp;#34;#2a2a2a&amp;#34; watch(PostgreSQL 15) PostgreSQL 15からはwatchが利用できます。 PSQL_WATCH_PAGER には以下の設定を推奨します。 これにより空行で区切られた最後のセクションを表示し続けます。
PSQL_WATCH_PAGER=&amp;#39;ov --follow-section --section-delimiter &amp;#34;^$&amp;#34;&amp;#39; expanded output (\x) 拡張出力(\x)で表示のときには、レコード区切りをセクション区切りとして扱うと、レコード区切りでスクロールするため、見やすくなります。
PAGER &amp;#39;ov -F --section-delimiter &amp;#34;^-&amp;#34;&amp;#39; (\x)と\watchを組み合わせることもできます。
unaligned (\a) アラインメントなし（列を揃えない）表示でも、列ハイライトを利用することで、快適に表示されます。 以下のように、PAGERの指定は変更しません。
PSQL_PAGER=&amp;#39;ov -F -C -d &amp;#34;|&amp;#34; -H1&amp;#39;.</description></item><item><title>psqlのPAGERを設定する</title><link>https://noborus.github.io/ja/blog/psql-pager/index.html</link><pubDate>Sun, 11 Jun 2023 07:00:00 +0900</pubDate><guid>https://noborus.github.io/ja/blog/psql-pager/index.html</guid><description>psqlのPAGERを設定する PAGERをoff/onにする psqlでは pset値により、PAGERをon/off/alwaysにすることができます。alwaysにすると、psql起動時に出力が画面に収まっても常にPAGERが起動します。
オプションで一時的にPAGERをoffにするには以下のようにします（以降offの部分はonやalwaysが指定できる）。
psql -P pager=off .psqlrcファイルに設定すれば以後ずっとPAGERをoffになります。
\pset pager off起動後にPAGERをoffにする（psqlで接続後に実行する）には\psetコマンドを使用します。
# \pset pager off\pset pagerを引数なしで実行するとトグルになり、実行するとon/offが切り替わります。
# \pset pager Pager usage is off. # \pset pager Pager is used for long output.PostgreSQL 15.0からの追加機能 PostgreSQL 15.0からは、pager_min_linesが追加され、画面に収まらない場合に何行以上だったらPAGERを起動するか行数を指定できます。デフォルトは0で、画面に収まらない場合にPAGERを起動します（画面に収まる行数を指定しても無効になる）。 pager_min_linesよりもpset pager=alwaysの方が優先されます。 ターミナルのスクロール等でさかのぼれない場合のみPAGERを起動したい場合に便利です。
psql -P pager_min_lines=10000 pset値なので、.psqlrcや起動後に実行することもできます。
\pset pager_min_lines 10000# \pset pager_min_lines 10000psetの値は、\psetを実行すると表示されます。pagerの値はoff=0, on=1, always=2になります。
# \pset border 1 columns 0 csv_fieldsep &amp;#39;,&amp;#39; expanded off fieldsep &amp;#39;|&amp;#39; fieldsep_zero off footer on format aligned linestyle ascii null &amp;#39;&amp;#39; numericlocale off pager 1 pager_min_lines 10000 recordsep &amp;#39;\n&amp;#39; recordsep_zero off tableattr title tuples_only off unicode_border_linestyle single unicode_column_linestyle single unicode_header_linestyle singlePAGERを変更する psqlでは、PSQL_PAGER又はPAGER環境変数により、PAGERを変更することができます。PAGERは汎用的な環境変数なので、psql以外のコマンドでも使用されるのでpsqlのみに適用したい場合は、PSQL_PAGERを使用します。 PSQL_PAGERとPAGER環境変数がセットされていない場合は、more又はlessがデフォルトのPAGERになる。lessがある場合は、lessが優先されます。</description></item></channel></rss>