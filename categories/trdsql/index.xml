<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>trdsql on Noboru Saito's page</title><link>https://noborus.github.io/categories/trdsql/index.html</link><description>Recent content in trdsql on Noboru Saito's page</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 10 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://noborus.github.io/categories/trdsql/index.xml" rel="self" type="application/rss+xml"/><item><title>trdsql install</title><link>https://noborus.github.io/trdsql/01_install/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noborus.github.io/trdsql/01_install/index.html</guid><description>Install For Linux/Windows/macOS, Download. It is made in Go and has no other dependent libraries, so it can be deployed and executed immediately.
Docker If Docker is available, you can also run it with Docker. You can also use docker pull from Docker Hub, so please pull as follows.
docker pull noborus/trdsql Mount and use the input file location. Since the result is output to the standard output, it can be received by redirection as it is.</description></item><item><title>trdsql File format conversion</title><link>https://noborus.github.io/trdsql/02_convert/index.html</link><pubDate>Sat, 10 Jun 2023 00:00:00 +0000</pubDate><guid>https://noborus.github.io/trdsql/02_convert/index.html</guid><description>TRDSQL describes files such as CSV as a tool for processing SQL, but can also be used as a tool for simply converting file formats.
In that case, SQL is enough to remember the following fixed phrases. Output all rows and columns in the file.
SELECT * FROM fileName After that, if you specify the input format (-i &amp;hellip;) and the output format (-o &amp;hellip;) as the option, you can convert the file format.</description></item></channel></rss>