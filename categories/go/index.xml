<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on Noboru Saito's page</title><link>https://noborus.github.io/categories/go/</link><description>Recent content in go on Noboru Saito's page</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy;Noboru Saito 2019</copyright><lastBuildDate>Sun, 17 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://noborus.github.io/categories/go/index.xml" rel="self" type="application/rss+xml"/><item><title>tcellについて2</title><link>https://noborus.github.io/blog/tcell_02/</link><pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/tcell_02/</guid><description>これまで goのTUIについて tcellについて イベント tcellのイベントは、NewScreen()で作成したスクリーンのPollEvent()で取得できます。 その名の通り、イベントが起こるまでポーリング（polling）して待つので、起こらない限り止まったままになります。 Pol</description></item><item><title>tcellについて</title><link>https://noborus.github.io/blog/tcell_01/</link><pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate><guid>https://noborus.github.io/blog/tcell_01/</guid><description>SetContent() goのTUIについてで書いたようにtcellのSetContent()は1文字設置していくのでASCIIの範囲内だと簡単ですが、Unicodeの世界では注意すべき点があります。 まず日本語などの全角幅の文字と半角幅の文字が混在すると全角幅のときには、次の文字は1つとばして設置する</description></item><item><title>goのTUIについて</title><link>https://noborus.github.io/blog/go_tui/</link><pubDate>Tue, 12 May 2020 23:00:00 +0900</pubDate><guid>https://noborus.github.io/blog/go_tui/</guid><description>概要 goでTUI(text user interface)を作成する場合にライブラリを使用するのが一般的です。 goのTUIライブラリはだいたい以下に分類されます。 termbox-go系 tcell系 その他 TUIライブラリを謳っている場合は、だいたい上記2つを元に実装されている場合が多いです。</description></item><item><title>Oviewer</title><link>https://noborus.github.io/blog/oviewer_en/</link><pubDate>Sat, 25 Apr 2020 16:50:00 +0900</pubDate><guid>https://noborus.github.io/blog/oviewer_en/</guid><description>Introduction to OV - Oviewer.
Install You can also download binaries from the ov release, but for now it is still recommended to go get and download the latest version.
go get -u github.com/noborus/ov cd ov make install Features oviewer is a terminal pager like less or more.
Compressed (gzip, bzip2, zstd, lz4, xz) files can be displayed as they are. Better Unicode support. Can also display combined characters that can be displayed in the terminal (if fonts are available). Better wide (full-width) character support. Can be fixed by specifying the number of rows in the header. Ability to switch between wrapping and non-wrapping lines. Background color can be added to every 1 lines. Supports display from psql and mysql. The contents of the current screen can be exported at the end. The goal is to use the PAGER environment variable without problems.</description></item><item><title>Oviewer</title><link>https://noborus.github.io/blog/oviewer/</link><pubDate>Tue, 21 Apr 2020 14:50:00 +0900</pubDate><guid>https://noborus.github.io/blog/oviewer/</guid><description>私が作成中のov - Oviewerの紹介です。 最初Oviewerというレポジトリ名でしたが、コマンド名に合わせるようにovに変更しました。 インストール ov のリリースからバイナリもダウンロードできますが、今はまだgo getで最新をダウンロードして使うことをオススメします。 ※ 2020/5</description></item><item><title>GoのTUIで表示が崩れる場合</title><link>https://noborus.github.io/blog/runewidth/</link><pubDate>Mon, 06 Apr 2020 16:10:00 +0900</pubDate><guid>https://noborus.github.io/blog/runewidth/</guid><description>結論 gnome-terminalを使用している場合は、設定の「曖昧幅の文字(W)」と環境変数RUNEWIDTH_EASTASIANを一致させよう。 Ambiguous width(曖昧幅) ターミナル上のアプリケーション(TUI)では、GUIと違って文字単位で描画されます。 そして1文字の幅は固定されて</description></item></channel></rss>